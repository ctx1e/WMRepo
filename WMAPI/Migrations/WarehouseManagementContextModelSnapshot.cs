// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WMAPI.Models;

#nullable disable

namespace WMAPI.Migrations
{
    [DbContext(typeof(WarehouseManagementContext))]
    partial class WarehouseManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WMAPI.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("inventory_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"), 1L, 1);

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int")
                        .HasColumnName("quantity_in_stock");

                    b.HasKey("InventoryId");

                    b.HasIndex(new[] { "ProductId" }, "UQ__Inventor__47027DF4096D455F")
                        .IsUnique();

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("WMAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("product_name");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WMAPI.Models.WarehouseIn", b =>
                {
                    b.Property<int>("InId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("in_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InId"), 1L, 1);

                    b.Property<string>("InCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("in_code");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime")
                        .HasColumnName("in_date");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("supplier_name");

                    b.Property<decimal>("TotalPriceIn")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("total_price_in");

                    b.HasKey("InId")
                        .HasName("PK__Warehous__1CD08BE9EAD10864");

                    b.HasIndex(new[] { "InCode" }, "UQ__Warehous__CE5B7C52C81F4C70")
                        .IsUnique();

                    b.ToTable("Warehouse_In", (string)null);
                });

            modelBuilder.Entity("WMAPI.Models.WarehouseInDetail", b =>
                {
                    b.Property<int>("InDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("in_detail_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InDetailId"), 1L, 1);

                    b.Property<int>("InId")
                        .HasColumnType("int")
                        .HasColumnName("in_id");

                    b.Property<decimal>("PriceIn")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("price_in");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("QuantityIn")
                        .HasColumnType("int")
                        .HasColumnName("quantity_in");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("total_price");

                    b.HasKey("InDetailId")
                        .HasName("PK__Warehous__8F4C7547D8B15D35");

                    b.HasIndex("InId");

                    b.HasIndex("ProductId");

                    b.ToTable("Warehouse_In_Details", (string)null);
                });

            modelBuilder.Entity("WMAPI.Models.WarehouseOut", b =>
                {
                    b.Property<int>("OutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("out_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutId"), 1L, 1);

                    b.Property<string>("OutCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("out_code");

                    b.Property<DateTime>("OutDate")
                        .HasColumnType("datetime")
                        .HasColumnName("out_date");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("recipient_name");

                    b.Property<decimal>("TotalPriceOut")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("total_price_out");

                    b.HasKey("OutId")
                        .HasName("PK__Warehous__D7CC77D8C0C004E5");

                    b.HasIndex(new[] { "OutCode" }, "UQ__Warehous__BD9478991FD91B95")
                        .IsUnique();

                    b.ToTable("Warehouse_Out", (string)null);
                });

            modelBuilder.Entity("WMAPI.Models.WarehouseOutDetail", b =>
                {
                    b.Property<int>("OutDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("out_detail_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutDetailId"), 1L, 1);

                    b.Property<int>("OutId")
                        .HasColumnType("int")
                        .HasColumnName("out_id");

                    b.Property<decimal>("PriceOut")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("price_out");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("QuantityOut")
                        .HasColumnType("int")
                        .HasColumnName("quantity_out");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("total_price");

                    b.HasKey("OutDetailId")
                        .HasName("PK__Warehous__0DC07A7FCD119C79");

                    b.HasIndex("OutId");

                    b.HasIndex("ProductId");

                    b.ToTable("Warehouse_Out_Details", (string)null);
                });

            modelBuilder.Entity("WMAPI.Models.Inventory", b =>
                {
                    b.HasOne("WMAPI.Models.Product", "Product")
                        .WithOne("Inventory")
                        .HasForeignKey("WMAPI.Models.Inventory", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__produ__46E78A0C");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WMAPI.Models.WarehouseInDetail", b =>
                {
                    b.HasOne("WMAPI.Models.WarehouseIn", "In")
                        .WithMany("WarehouseInDetails")
                        .HasForeignKey("InId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Warehouse__in_id__3B75D760");

                    b.HasOne("WMAPI.Models.Product", "Product")
                        .WithMany("WarehouseInDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Warehouse__produ__3C69FB99");

                    b.Navigation("In");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WMAPI.Models.WarehouseOutDetail", b =>
                {
                    b.HasOne("WMAPI.Models.WarehouseOut", "Out")
                        .WithMany("WarehouseOutDetails")
                        .HasForeignKey("OutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Warehouse__out_i__4222D4EF");

                    b.HasOne("WMAPI.Models.Product", "Product")
                        .WithMany("WarehouseOutDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Warehouse__produ__4316F928");

                    b.Navigation("Out");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WMAPI.Models.Product", b =>
                {
                    b.Navigation("Inventory");

                    b.Navigation("WarehouseInDetails");

                    b.Navigation("WarehouseOutDetails");
                });

            modelBuilder.Entity("WMAPI.Models.WarehouseIn", b =>
                {
                    b.Navigation("WarehouseInDetails");
                });

            modelBuilder.Entity("WMAPI.Models.WarehouseOut", b =>
                {
                    b.Navigation("WarehouseOutDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
